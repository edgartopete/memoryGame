{"ast":null,"code":"var _jsxFileName = \"/Users/edartopete/Desktop/code/homework/memorygame/src/components/cards.js\";\nimport React, { Component } from 'react';\nvar guess = [];\nlet newgame = true;\n\nconst shuffleArray = arr => arr.sort(() => Math.random() - 0.5);\n\nclass Cards extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n      score: 0,\n      topScore: 0,\n      newTopScore: 0\n    };\n\n    this.handleOnClick = elem => {\n      const sArray = shuffleArray(this.state.cards);\n      const key = elem.target.id;\n      let score2 = this.state.score;\n      let topScore = this.state.topScore;\n      let newTopScore = this.state.newTopScore;\n      console.log(topScore, newTopScore);\n\n      if (newgame) {\n        if (!guess.includes(key) || guess.length === 0) {\n          guess.push(key);\n\n          if (topScore >= newTopScore) {\n            newTopScore++;\n          } else {\n            topScore = newTopScore;\n          }\n\n          score2++;\n        } else {\n          newgame = false;\n          score2 = 0;\n          guess = [];\n        }\n      } else {\n        score2++;\n        newgame = true;\n      }\n\n      this.setState({\n        cards: sArray,\n        score: score2,\n        topScore: topScore,\n        newTopScore: newTopScore\n      });\n    };\n  }\n\n  render() {\n    const card = this.state.cards.map((cards, i) => {\n      return React.createElement(\"div\", {\n        className: \"col s3\",\n        key: cards,\n        onClick: this.handleOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"./img/\" + cards + \".jpeg\",\n        alt: \"\",\n        id: cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-fixed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nav-wrapper blue-grey darken-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"brand-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Memory Game\"), React.createElement(\"ul\", {\n      className: \"right hide-on-med-and-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"badge white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Score: \", this.state.score, \" | Top Score: \", this.state.newTopScore)))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, card)));\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/edartopete/Desktop/code/homework/memorygame/src/components/cards.js"],"names":["React","Component","guess","newgame","shuffleArray","arr","sort","Math","random","Cards","state","cards","score","topScore","newTopScore","handleOnClick","elem","sArray","key","target","id","score2","console","log","includes","length","push","setState","render","card","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nvar guess=[];\nlet newgame=true;\nconst shuffleArray = arr => arr.sort(() => Math.random() - 0.5);\nclass Cards extends Component {\n    state = {\n        cards: ['1','2','3','4','5','6','7','8','9','10','11','12'],\n        score:0,\n        topScore:0,\n        newTopScore:0\n    };\n\n    handleOnClick = elem => {\n    \n        const sArray = shuffleArray(this.state.cards);\n        const key = elem.target.id;\n        let score2 = this.state.score;\n        let topScore= this.state.topScore;\n        let newTopScore=this.state.newTopScore;\n        console.log(topScore, newTopScore);\n        if (newgame){\n            if (!guess.includes(key) || guess.length===0){\n                guess.push(key);\n                if(topScore>=newTopScore){\n                    newTopScore++;\n                }else{\n                    topScore=newTopScore;\n                }\n                     \n                score2++;\n                    \n            }\n            else{\n                newgame=false;\n                score2=0;\n                guess=[];\n\n            }\n        }else{\n            score2++;\n            newgame=true;\n        }\n        \n        this.setState({\n            cards: sArray,\n            score: score2,\n            topScore: topScore,\n            newTopScore: newTopScore\n         });\n      };\n    \n    render() {\n        \n        const card = this.state.cards.map((cards,i) => {\n            return(\n                    \n                    <div className =\"col s3\" key={cards} onClick={this.handleOnClick}>\n                    <div className=\"Card\" >\n                        <div className=\"card-image\">\n                            <img src={\"./img/\"+cards+\".jpeg\"} alt=\"\" id={cards}></img>\n                        </div>\n                    </div>\n                    </div>\n                \n            \n            )            \n        })\n        return (\n            <div>\n\n            \n            <div className = \"navbar-fixed\" >\n            <nav>\n                <div className=\"nav-wrapper blue-grey darken-4\">\n                    <a href=\"#!\" className=\"brand-logo\">Memory Game</a>\n                    <ul className=\"right hide-on-med-and-down\">\n                        <li><span className=\"badge white\">Score: {this.state.score} | Top Score: {this.state.newTopScore}</span></li>\n                    </ul>\n                </div>\n            </nav>\n            </div >\n            <div className=\"container\">\n            <div className=\"row\">\n                \n                {card}\n            </div>\n            </div>\n            \n            </div>\n            \n            \n        );\n    }\n}\n\nexport default Cards;\n\n"]},"metadata":{},"sourceType":"module"}