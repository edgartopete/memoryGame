{"ast":null,"code":"var _jsxFileName = \"/Users/edartopete/Desktop/code/homework/memorygame/src/components/cards.js\";\nimport React, { Component } from 'react';\nvar guess = [];\nlet newgame = true;\n\nclass Cards extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n      score: 0,\n      topScore: 0\n    };\n\n    this.handleOnClick = elem => {\n      const shuffleArray = arr => arr.sort(() => Math.random() - 0.5);\n\n      const sArray = shuffleArray(this.state.cards);\n      const key = elem.target.id;\n      let score = this.state.score;\n      let topScore = this.state.topScore;\n\n      if (!guess.includes(key) || guess.length === 0) {\n        guess.push(key);\n        score++;\n\n        if (!newgame) {\n          topScore++;\n        }\n      } else {\n        newgame = false;\n        this.setState({\n          score: 0\n        });\n      }\n\n      this.setState({\n        cards: sArray,\n        score,\n        topScore\n      });\n      console.log(this.state.cards);\n      console.log(guess);\n      console.log(this.state.score);\n      console.log(this.state.topScore);\n    };\n  }\n\n  render() {\n    const card = this.state.cards.map((cards, i) => {\n      return React.createElement(\"div\", {\n        className: \"col s3\",\n        key: cards,\n        onClick: this.handleOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"./img/\" + cards + \".jpeg\",\n        alt: \"\",\n        id: cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, card);\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/edartopete/Desktop/code/homework/memorygame/src/components/cards.js"],"names":["React","Component","guess","newgame","Cards","state","cards","score","topScore","handleOnClick","elem","shuffleArray","arr","sort","Math","random","sArray","key","target","id","includes","length","push","setState","console","log","render","card","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,KAAK,GAAC,EAAV;AACA,IAAIC,OAAO,GAAC,IAAZ;;AACA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACJC,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,IAArC,EAA0C,IAA1C,EAA+C,IAA/C,CADH;AAEJC,MAAAA,KAAK,EAAC,CAFF;AAGJC,MAAAA,QAAQ,EAAC;AAHL,KADkB;;AAAA,SAO1BC,aAP0B,GAOVC,IAAI,IAAI;AAEpB,YAAMC,YAAY,GAAGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAAS,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA/B,CAA5B;;AACA,YAAMC,MAAM,GAAGL,YAAY,CAAC,KAAKN,KAAL,CAAWC,KAAZ,CAA3B;AACA,YAAMW,GAAG,GAAGP,IAAI,CAACQ,MAAL,CAAYC,EAAxB;AACA,UAAIZ,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAvB;AACA,UAAIC,QAAQ,GAAE,KAAKH,KAAL,CAAWG,QAAzB;;AAEA,UAAI,CAACN,KAAK,CAACkB,QAAN,CAAeH,GAAf,CAAD,IAAwBf,KAAK,CAACmB,MAAN,KAAe,CAA3C,EAA6C;AACzCnB,QAAAA,KAAK,CAACoB,IAAN,CAAWL,GAAX;AACAV,QAAAA,KAAK;;AACL,YAAI,CAACJ,OAAL,EAAa;AACTK,UAAAA,QAAQ;AACX;AAEJ,OAPD,MAOK;AACDL,QAAAA,OAAO,GAAC,KAAR;AACA,aAAKoB,QAAL,CAAc;AACXhB,UAAAA,KAAK,EAAC;AADK,SAAd;AAGH;;AAED,WAAKgB,QAAL,CAAc;AACVjB,QAAAA,KAAK,EAAEU,MADG;AAEVT,QAAAA,KAFU;AAGVC,QAAAA;AAHU,OAAd;AAKCgB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWC,KAAvB;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWE,KAAvB;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWG,QAAvB;AACF,KAtCuB;AAAA;;AAwC1BkB,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKtB,KAAL,CAAWC,KAAX,CAAiBsB,GAAjB,CAAqB,CAACtB,KAAD,EAAOuB,CAAP,KAAa;AAC3C,aAEQ;AAAK,QAAA,SAAS,EAAE,QAAhB;AAAyB,QAAA,GAAG,EAAEvB,KAA9B;AAAqC,QAAA,OAAO,EAAE,KAAKG,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,WAASH,KAAT,GAAe,OAAzB;AAAkC,QAAA,GAAG,EAAC,EAAtC;AAAyC,QAAA,EAAE,EAAEA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADA,CAFR;AAYH,KAbY,CAAb;AAcA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKqB,IADL,CADJ;AAOH;;AA9DyB;;AAiE9B,eAAevB,KAAf","sourcesContent":["import React, { Component } from 'react';\n\nvar guess=[];\nlet newgame=true;\nclass Cards extends Component {\n    state = {\n        cards: ['1','2','3','4','5','6','7','8','9','10','11','12'],\n        score:0,\n        topScore:0\n    };\n\n    handleOnClick = elem => {\n    \n        const shuffleArray = arr => arr.sort(() => Math.random() - 0.5);\n        const sArray = shuffleArray(this.state.cards);\n        const key = elem.target.id;\n        let score = this.state.score;\n        let topScore= this.state.topScore;\n\n        if (!guess.includes(key) || guess.length===0){\n            guess.push(key);\n            score++;\n            if (!newgame){\n                topScore++;\n            }\n            \n        }else{\n            newgame=false;\n            this.setState({\n               score:0 \n            });\n        }\n        \n        this.setState({\n            cards: sArray,\n            score,\n            topScore,\n         });\n         console.log(this.state.cards)\n         console.log(guess)\n         console.log(this.state.score)\n         console.log(this.state.topScore)\n      };\n    \n    render() {\n        const card = this.state.cards.map((cards,i) => {\n            return(\n                \n                    <div className =\"col s3\" key={cards} onClick={this.handleOnClick}>\n                    <div className=\"Card\" >\n                        <div className=\"card-image\">\n                            <img src={\"./img/\"+cards+\".jpeg\"} alt=\"\" id={cards}></img>\n                        </div>\n                    </div>\n                    </div>\n                \n            \n            )            \n        })\n        return (\n            <div>\n                {card}\n            </div>\n            \n            \n        );\n    }\n}\n\nexport default Cards;\n\n"]},"metadata":{},"sourceType":"module"}